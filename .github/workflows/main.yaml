# Name of the workflow
name: Build

  # Controls what will trigger the workflow.
  # Change it to your needs.
on:
    # A new push to the "main" branch.
    push:
      branches: [ "usman" ]
    # A new pull request to the "main" branch.
    pull_request:
      branches: [ "usman" ]

      # Allows to trigger the workflow from GitHub interfaces.
      workflow_dispatch:

# A single workflow can have multiple jobs.
jobs:
  # 'A new job is defined with the name: "build_android"
  build_android:
    # Defines what operating system will be used for the actions.
    # For android, we will use Linux GitHub-Hosted Runner.
    runs-on: ubuntu-latest
    # Defines what step should be passed for successful run
    steps:
      # Checkout to the selected branch
      - name: Checkout
        uses: actions/checkout@v3
      # Download and install flutter packages
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          # Define which stable flutter version should be used
          flutter-version: "3.19.6"
          channel: 'stable'
          # Enables cache for flutter packages
          # Speed up the process
          cache: true
      # Get Flutter project dependencies
      - name: Get dependencies
        run: flutter pub get
#on:
#  pull_request:
#    branches:
#      - main
#
#  push:
#    branches:
#      - main
#name: "Build & Release"
#jobs:
#  build:
#    name: Build & Release
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        flutter: [ 3.19.6 ]  # Specify your desired Flutter version
#        java: [ 19.0.2 ]         # Specify your desired Java version
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin' # You can choose other distributions like 'zulu', 'adopt', etc.
#          java-version: ${{ matrix.java }}
#
#      - name: Set up Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: ${{ matrix.flutter }}
#
#      - name: Flutter Clean
#        run: flutter clean
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - run: flutter clean
#      - run: flutter build apk --release --split-per-abi
##      - run: |
##          flutter build ios --no-codesign
##          cd build/ios/iphoneos
##          mkdir Payload
##          cd Payload
##          ln -s ../Runner.app
##          cd ..
##          zip -r app.ipa Payload
#      - name: Push to Releases
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
#          tag: v1.0.${{ github.run_number }}
#          token: ${{ secrets.TOKEN }}
